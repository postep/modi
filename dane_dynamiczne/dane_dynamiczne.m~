function dane_dynamiczne()
    ucz = dlmread('danedynucz33.txt');
    wer = dlmread('danedynwer33.txt');

    ucz_u = ucz(:, 1);
    ucz_y = ucz(:, 2);
    wer_u = wer(:, 1);
    wer_y = wer(:, 2);

    plot(ucz_u);
    xlabel('k');
    ylabel('u');
    print('-dpng', 'dane_dyn_ucz_u.png');

    plot(ucz_y);
    xlabel('k');
    ylabel('y');
    print('-dpng', 'dane_dyn_ucz_y.png');

    plot(wer_u);
    xlabel('k');
    ylabel('u');
    print('-dpng', 'dane_dyn_wer_u.png');

    plot(wer_y);
    xlabel('k');
    ylabel('y');
    print('-dpng', 'dane_dyn_wer_y.png');

    for i = 1:3
        [W, e, e_v] = model_bez_rekurencji(ucz_u, ucz_y, wer_u, wer_y, i);
        disp(i);
        disp('Model bez rekurencji');
        disp(W);
        disp(e);
        disp(e_v);
        [W, e, e_v] = model_z_rekurencja(W, ucz_u, ucz_y, wer_u, wer_y, i);
        disp('Model z rekurencja');
        disp(W);
        disp(e);
        disp(e_v);   
    end
end

function result = error(y, v)
    result = (v-y)'*(v-y);
end

function [W, err, err_v] = model_bez_rekurencji(u, y, u_v, y_v, n)
    Mu = zeros(0, numel(u)-n);
    My = zeros(0, numel(y)-n);
    Mu_v = zeros(0, numel(u_v)-n);
    My_v = zeros(0, numel(y_v)-n);
    
    for i = 1:n
       Mu = [Mu, u(n-i+1:numel(u)-i)];
       My = [My, y(n-i+1:numel(y)-i)];
       Mu_v = [Mu_v, u_v(n-i+1:numel(u_v)-i)];
       My_v = [My_v, y_v(n-i+1:numel(y_v)-i)];
    end
    
    M = [Mu, My];
    M_v = [Mu_v, My_v];
    Y = y(n+1:numel(y));
    Y_v = y_v(n+1:numel(y_v));
    
    W = M\Y;
    Y_mod = M*W;
    Y_v_mod = M_v*W;
    err = error(Y, Y_mod);
    err_v = error(Y_v, Y_v_mod);
    
    plot(Y_v_mod);
    hold on;
    plot(y_v);
    xlabel('k');
    ylabel('y');
    legend('y modelu', 'y danych');
    print('-dpng', ['model_bez_rek_walid_', num2str(n), '.png']);
    hold off;
    
    plot(Y_mod);
    hold on;
    plot(y);
    xlabel('k');
    ylabel('y');
    legend('y modelu', 'y danych');
    print('-dpng', ['model_bez_rek_train_', num2str(n), '.png']);
    hold off;
end

function [W, err, err_v] = model_z_rekurencja(W, u, y, u_v, y_v, n)
    k = numel(u);
    y_mod_train = zeros(k-n,1);
    y_mod_valid = zeros(k-n,1);
    y_mod_train(1:n) = y(1:n);
    y_mod_valid(1:n) = y_v(1:n);

    for j=n+1:k
        y_mod_valid(j) = 0;
        y_mod_train(j) = 0;
        for i=1:n
            y_mod_valid(j) = y_mod_valid(j)+u_v(j-i)*W(i)+y_mod_valid(j-i)*W(n+i);
            y_mod_train(j) = y_mod_train(j)+u(j-i)*W(i)+y_mod_train(j-i)*W(n+i);
        end
    end

    y_mod_valid = y_mod_train(n+1:k);
    y_mod_train = y_mod_train(n+1:k);

    err_v = error(y_mod_valid, y_v(n+1:k));
    err = error(y_mod_train, y(n+1:k));
    
    plot(Y_mod_valid);
    hold on;
    plot(y_v);
    xlabel('k');
    ylabel('y');
    legend('y modelu', 'y danych');
    print('-dpng', ['model_bez_rek_walid_', num2str(n), '.png']);
    hold off;
    
    plot(Y_mod);
    hold on;
    plot(y);
    xlabel('k');
    ylabel('y');
    legend('y modelu', 'y danych');
    print('-dpng', ['model_bez_rek_train_', num2str(n), '.png']);
    hold off;
end
